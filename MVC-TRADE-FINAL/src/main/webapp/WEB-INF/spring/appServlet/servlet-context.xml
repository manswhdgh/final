<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.proj.trade" />
	<!-- 로그를 출력하기 해서 DriverSpy이용한 jdbc설정 : Connection 이 1개만 존재 -->
	<beans:bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<beans:property value="net.sf.log4jdbc.DriverSpy"
			name="driverClassName" />
		<beans:property
			value="jdbc:log4jdbc:oracle:thin:@114.204.63.234:1521:XE" name="url" />
		<beans:property value="finalproject" name="username" />
		<beans:property value="finalproject" name="password" />
	</beans:bean>
	<!-- 트랜잭션 설정은 root-context.xml설정안됨 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- sqlSessionFactory :: mybatis가 사용 -->
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property
			value="classpath:com/proj/trade/dao/mybatis-conf.xml"
			name="configLocation" />
		<beans:property value="classpath:com/**/mapper/*.xml"
			name="mapperLocations" />
	</beans:bean>
	
	<!-- <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory" />
	</beans:bean> -->

	
	<!-- DAO using -->
	<beans:bean
		class="org.mybatis.spring.mapper.MapperFactoryBean" id="mDao">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property value="com.proj.trade.dao.IMemberDao"
			name="mapperInterface" />
	</beans:bean>
	<beans:bean
		class="org.mybatis.spring.mapper.MapperFactoryBean" id="bDao">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property value="com.proj.trade.dao.IBoardDao"
			name="mapperInterface" />
	</beans:bean>
	<beans:bean
		class="org.mybatis.spring.mapper.MapperFactoryBean" id="sDao">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property value="com.proj.trade.dao.SignUpDao"
			name="mapperInterface" />
	</beans:bean>
	<beans:bean
		class="org.mybatis.spring.mapper.MapperFactoryBean" id="atDao">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property value="com.proj.trade.dao.AuctionDao"
			name="mapperInterface" />
	</beans:bean>
	<beans:bean
		class="org.mybatis.spring.mapper.MapperFactoryBean" id="aDao">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property value="com.proj.trade.dao.IAdminDao"
			name="mapperInterface" />
	</beans:bean>
	
	<!-- 파일 첨부(Multipart Resolver 설정: form태그가 enctype="multipart/form-data"인 
		경우 서버의 Bean으로 전달해줌. id="multipartResolver" 라고 반드시 정확하게 명시해야 됨 -->
	<!-- id="multipartResolver" 변경하거나 생략하면 안됨 -->

	<beans:bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<beans:property value="UTF-8" name="defaultEncoding" />
		<beans:property value="10000000" name="maxUploadSize" />
		<!--10MB -->
		<beans:property value="10000000" name="maxInMemorySize" />
		<!--10MB -->
	</beans:bean>

	<!-- 인터셉터(갸로채기) 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/*" />
			<exclude-mapping path="/" />
			<exclude-mapping path="/signUp.do" />
			<exclude-mapping path="/access" />
			<exclude-mapping path="/idCheck.do" />
			<exclude-mapping path="/admPromoSearch" />
			<beans:bean
				class="com.proj.trade.userClass.SessionInterceptor" />
		</interceptor>
</interceptors>
</beans:beans>
